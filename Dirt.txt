<app-header></app-header>
<div class="page-container d-flex flex-column min-vh-100">
  <div class="main-container d-flex flex-grow-1">
    <div class="container mt-4">
      <div class="row book-details-container">
        <div class="col-md-2 d-flex justify-content-start">
          <img
            [src]="
              book?.bookCoverImage
                ? book?.bookCoverImage
                : 'assets/images/book-placeholder.png'
            "
            alt="{{ book?.title }}"
            class="book-image img-fluid rounded shadow"
          />
        </div>

        <div class="col-md-4 d-flex flex-column justify-content-start">
          <h2 class="book-title">{{ book?.title }}</h2>
          <p class="book-author"><strong>Author:</strong> {{ book?.author }}</p>
          <p class="book-price">
            <strong>Rs: </strong>
            <span class="price-text">{{ book?.price }}</span><br />
            OR<br />
            <i class="fas fa-coins"></i>
            <span class="price-text">: {{ book?.price * 4 }} BP</span>
          </p>
          <button
            class="btn btn-primary btn-lg mt-3"
            (click)="openPurchaseModal()"
          >
            Buy Now!
          </button>
        </div>
      </div>

      <!-- Review Section -->
      <div class="review-section mt-4">
        <h3>Ratings & Reviews</h3>
        <!-- Existing Reviews List -->
        <div class="reviews-list" *ngIf="reviews && reviews.length; else noReviews">
          <div class="review" *ngFor="let review of reviews">
            <div class="review-header">
              <span class="review-user">{{ review.userName || 'Anonymous' }}</span>
              <span class="review-rating">Rating: {{ review.rating }}/5</span>
            </div>
            <div class="review-comment">
              {{ review.comment }}
            </div>
            <div class="review-date">
              {{ review.createdAt | date:'medium' }}
            </div>
          </div>
        </div>
        <ng-template #noReviews>
          <p>No reviews yet. Be the first to review this book!</p>
        </ng-template>

        <!-- New Review Form -->
        <form #reviewForm="ngForm" (ngSubmit)="submitReview(reviewForm)">
          <div class="form-group">
            <label for="rating">Your Rating (1-5):</label>
            <select id="rating" name="rating" [(ngModel)]="newReview.rating" required>
              <option value="" disabled selected>Select rating</option>
              <option *ngFor="let r of [1,2,3,4,5]" [value]="r">{{ r }}</option>
            </select>
          </div>
          <div class="form-group">
            <label for="comment">Your Review:</label>
            <textarea
              id="comment"
              name="comment"
              [(ngModel)]="newReview.comment"
              placeholder="Write your review here"
              required
            ></textarea>
          </div>
          <button type="submit" class="btn btn-success" [disabled]="reviewForm.invalid || submittingReview">
            Submit Review
          </button>
        </form>
        <div class="message success" *ngIf="reviewSuccessMessage">{{ reviewSuccessMessage }}</div>
        <div class="message error" *ngIf="reviewErrorMessage">{{ reviewErrorMessage }}</div>
      </div>

      <!-- Suggested Books Section -->
      <hr />
      <div class="suggested-books">
        <h3 class="text-center">ðŸ“š You may also like</h3>
        <div class="book-gallery">
          <div
            class="book-card"
            *ngFor="let suggestion of suggestedBooks"
            (click)="navigateToBook(suggestion.id)"
          >
            <img
              [src]="suggestion?.bookCoverImage"
              alt="{{ suggestion?.title }}"
            />
            <p class="book-title">{{ suggestion?.title }}</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Purchase Modal remains unchanged -->
    <div class="modal fade" id="purchaseModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Checkout</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <div class="modal-body">
            <!-- Tabs for Pay with Points and Top-Up -->
            <ul class="nav nav-tabs">
              <li class="nav-item">
                <a
                  class="nav-link active"
                  data-bs-toggle="tab"
                  href="#payWithPoints"
                  >Pay with Points</a
                >
              </li>
              <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#topUp"
                  >Top-Up</a
                >
              </li>
            </ul>

            <div class="tab-content mt-3">
              <div class="tab-pane fade show active" id="payWithPoints">
                <p>
                  You have <strong>{{ points }}</strong> points.
                </p>
                <button
                  class="btn btn-success"
                  (click)="usePointsForCheckout()"
                >
                  Pay with Points
                </button>
              </div>

              <div class="tab-pane fade" id="topUp">
                <form (ngSubmit)="proceedWithCardPayment()">
                  <div class="form-group">
                    <label for="cardNumber">Card Number</label>
                    <input
                      type="text"
                      id="cardNumber"
                      class="form-control"
                      [(ngModel)]="cardDetails.cardNumber"
                      name="cardNumber"
                      required
                    />
                  </div>
                  <div class="form-group">
                    <label for="expiryMonth">Expiry Month</label>
                    <input
                      type="number"
                      id="expiryMonth"
                      class="form-control"
                      [(ngModel)]="cardDetails.expiryMonth"
                      name="expiryMonth"
                      required
                    />
                  </div>
                  <div class="form-group">
                    <label for="expiryYear">Expiry Year</label>
                    <input
                      type="number"
                      id="expiryYear"
                      class="form-control"
                      [(ngModel)]="cardDetails.expiryYear"
                      name="expiryYear"
                      required
                    />
                  </div>
                  <div class="form-group">
                    <label for="cvv">CVV</label>
                    <input
                      type="number"
                      id="cvv"
                      class="form-control"
                      [(ngModel)]="cardDetails.cvv"
                      name="cvv"
                      required
                    />
                  </div>
                  <button type="submit" class="btn btn-primary mt-3">
                    Proceed with Payment
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <app-footer></app-footer>
</div>



/////////////////ts//////////////////////////

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AuthService } from '../../Services/authService';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FooterComponent } from '../../Component/Home/footer/footer.component';
import { HeaderComponent } from '../../Component/Home/header/header.component';

declare var bootstrap: any;

@Component({
  selector: 'app-buy-a-book',
  templateUrl: './buy-a-book.component.html',
  imports: [CommonModule, FormsModule, FooterComponent, HeaderComponent],
  styleUrls: ['./buy-a-book.component.css'],
})
export class BuyABookComponent implements OnInit {
  book: any = null;
  points: number = 0;
  hasPoints: boolean = false;
  cardDetails = { cardNumber: '', expiryMonth: '', expiryYear: '', cvv: '' };
  bookId: string = '';
  suggestedBooks: any[] = [];

  constructor(
    private authService: AuthService,
    private route: ActivatedRoute,
    private router: Router
  ) {}

  ngOnInit() {
    this.authService.validateToken().subscribe({
      next: (response) => {
        // this.fetchUserData(response.user.id);
        console.log('Token is valid', response);
      },
      error: (err) => {
        console.error('Token validation failed', err);
        this.router.navigate(['/login']); // Redirect to login if invalid
      },
    });
    this.bookId = this.route.snapshot.paramMap.get('id') || '';
    if (this.bookId) this.getBookDetails(this.bookId);
    this.getUserPoints();
    this.loadSuggestedBooks();
  }

  getBookDetails(id: string) {
    this.authService.getBook(id).subscribe(
      (data: any) => {
        this.book = data;
      },
      (error) => {
        console.error('Failed to fetch book details', error);
      }
    );
  }

  getUserPoints() {
    this.authService.getUserPoints().subscribe(
      (data: any) => {
        this.points = data.points;
        this.hasPoints = this.points >= (this.book?.price || 0);
      },
      (error) => {
        console.error('Failed to fetch user points', error);
      }
    );
  }

  loadSuggestedBooks() {
    this.authService.loadAllBooks().subscribe(
      (data: any) => {
        this.suggestedBooks = data.books;
      },
      (error) => {
        console.error('Failed to fetch suggested books', error);
      }
    );
  }

  openPurchaseModal() {
    let modal = new bootstrap.Modal(document.getElementById('purchaseModal'));
    modal.show();
  }

  usePointsForCheckout() {
    this.authService.purchaseBook(this.book?._id).subscribe(
      (response: any) => {
        alert(`Successfully purchased "${response.book?.title}"!`);
        this.points = response.remainingPoints;
        this.hasPoints = this.points >= this.book?.points;
      },
      (error) => {
        alert('Purchase failed: ' + error.error.message);
      }
    );
  }

  proceedWithCardPayment() {
    console.log('Payment Data:', { ...this.cardDetails, bookId: this.book.id });
  }

  navigateToBook(bookId: string) {
    this.router.navigate(['/view/buy-a-book', bookId]);
  }
}

/////////////////////////////////////////css////////////////////////////


<form (ngSubmit)="proceedWithCardPayment()">
                  <div class="form-group">
                    <label for="cardNumber">Card Number</label>
                    <input
                      type="text"
                      id="cardNumber"
                      class="form-control"
                      [(ngModel)]="cardDetails.cardNumber"
                      name="cardNumber"
                      required
                    />
                  </div>
                  <div class="form-group">
                    <label for="expiryMonth">Expiry Month</label>
                    <input
                      type="number"
                      id="expiryMonth"
                      class="form-control"
                      [(ngModel)]="cardDetails.expiryMonth"
                      name="expiryMonth"
                      required
                    />
                  </div>
                  <div class="form-group">
                    <label for="expiryYear">Expiry Year</label>
                    <input
                      type="number"
                      id="expiryYear"
                      class="form-control"
                      [(ngModel)]="cardDetails.expiryYear"
                      name="expiryYear"
                      required
                    />
                  </div>
                  <div class="form-group">
                    <label for="cvv">CVV</label>
                    <input
                      type="number"
                      id="cvv"
                      class="form-control"
                      [(ngModel)]="cardDetails.cvv"
                      name="cvv"
                      required
                    />
                  </div>
                  <button type="submit" class="btn btn-primary mt-3">
                    Proceed with Payment
                  </button>
                </form>






                ////////////////////////////////////////////////////////


                <div class="row mb-4">
    <div class="col-12">
      <h4>My Purchases</h4>

      <h5 class="text-center" *ngIf="!myBooks || myBooks.length === 0">
        Add Books +<i class="fas fa-book"></i>
      </h5>
      <div class="row g-4 books-container">
        <div class="col-md-2 col-sm-6" *ngFor="let book of myBooks">
          <div class="card h-100">
            <img
              [src]="book.bookCoverImage"
              alt="{{ book.title }}"
              class="card-img-top"
              style="width: 100%; height: 250px; object-fit: cover"
            />
            <div class="card-body">
              <h5 class="card-title">{{ book.name }}</h5>
              <p class="card-text">Author: {{ book.author }}</p>
              <p class="card-text">
                <strong>Price:</strong>
                {{
                  book.pointsSpent
                    ? book.pointsSpent / 4 + " PKR"
                    : book.pointsSpent + " Points"
                }}
              </p>

              <div class="rating">
                <span *ngFor="let star of getStars(book.rating)">
                  <i class="fas fa-star"></i>
                </span>
                <span *ngIf="book.rating < 5">
                  <i class="far fa-star"></i>
                </span>
              </div>

              <!-- <button class="btn btn-primary w-100">
                View <i class="fas fa-eye"></i>
              </button> -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row mb-4">
    <div class="col-12">
      <h4>My Uploads</h4>

      <h5 class="text-center" *ngIf="!books || books.length === 0">
        Add Books +<i class="fas fa-book"></i>
      </h5>
      <div class="row g-4 books-container">
        <div class="col-md-2 col-sm-6" *ngFor="let book of books">
          <div class="card h-100">
            <img
              [src]="book.bookCoverImage"
              alt="{{ book.title }}"
              class="card-img-top"
              style="width: 100%; height: 250px; object-fit: cover"
            />
            <div class="card-body">
              <h5 class="card-title">{{ book.name }}</h5>
              <p class="card-text">Author: {{ book.author }}</p>
              <p class="card-text">
                <strong>Price:</strong>
                {{ book.price ? book.price + " PKR" : book.points + " Points" }}
              </p>

              <!-- Rating Section (keeps the stars icon) -->
              <div class="rating">
                <span *ngFor="let star of getStars(book.rating)">
                  <i class="fas fa-star"></i>
                </span>
                <span *ngIf="book.rating < 5">
                  <i class="far fa-star"></i>
                </span>
              </div>

              <!-- View button (keeps the icon and functionality) -->
              <!-- <button class="btn btn-primary w-100">
                View <i class="fas fa-eye"></i>
              </button> -->
            </div>
          </div>
        </div>
      </div>

      <!-- <div *ngIf="loading" class="text-center">
        <p>Loading more books...</p>
      </div> -->
    </div>
  </div>